services:
  traefik:
    image: traefik:v2.9
    ports:
      - published: 80
        target: 80
        protocol: tcp
        mode: host
      - published: 8080
        target: 80
        protocol: tcp
        mode: host
      - published: 3002
        target: 80
        protocol: tcp
        mode: host
      - published: 4000
        target: 80
        protocol: tcp
        mode: host
    networks:
      - app_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      --providers.docker=true
      --providers.docker.network=app_network
      --providers.docker.exposedByDefault=false
      --entryPoints.web.address=:80
      --entryPoints.api.address=:3002
      --entryPoints.whoami.address=:4000
      --entryPoints.dash.address=:8080
      --api.debug=true
      --api.dashboard=true
      --log.level=DEBUG
      --accesslog=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.entrypoints=dash
      - traefik.http.routers.mydashboard.rule=Host(`localhost`)
      - traefik.http.routers.mydashboard.service=api@internal

  whoami:
    image: traefik/whoami:v1.8
    networks:
      - app_network
    deploy:
      replicas: 3
      labels:
        - traefik.enable=true
        - traefik.http.routers.mywhoami.entrypoints=whoami
        - traefik.http.routers.mywhoami.rule=Host(`localhost`) && PathPrefix(`/whoami`)
        - traefik.http.services.mywhoami.loadbalancer.server.port=80
        - traefik.http.routers.mywhoami.service=mywhoami@internal

  api:
    image: traefik/whoami:v1.8
    networks:
      - app_network
    deploy:
      replicas: 3
      labels:
        - traefik.enable=true
        - traefik.http.routers.myapi.entrypoints=api
        - traefik.http.routers.myapi.rule=Host(`localhost`) && PathPrefix(`/myapi`)
        - traefik.http.services.myapi.loadbalancer.server.port=80
        - traefik.http.routers.myapi.service=myapi@internal

networks:
  app_network:
    external: true
